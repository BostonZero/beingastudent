Script started on Thu 23 Sep 2021 11:19:00 AM EDT
]0;tuser@tutor-vserver: ~tuser@tutor-vserver:~$ test[K[K[K[Kgdb testio.lnx
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
testio.lnx: No such file or directory.
(gdb) tar rem [K[K[K[K[K[K[K[K^CQuit
(gdb) ^CQuit
(gdb) 
(gdb) ^CQuit
(gdb) quit
]0;tuser@tutor-vserver: ~tuser@tutor-vserver:~$ ls
[0m[01;34mhw1[0m  [01;34minclude[0m  [01;34mlib[0m  [01;34mtestaout[0m  [01;34mtestelf[0m  typescript
]0;tuser@tutor-vserver: ~tuser@tutor-vserver:~$ cd hw1
]0;tuser@tutor-vserver: ~/hw1tuser@tutor-vserver:~/hw1$ ls
[0m[01;34mhw1_part1[0m  io_public.h               syms                        testio.syms
io.c       makefile                  testio.c                    tty.c
ioconf.c   [01;34mqueue[0m                     testio.lnx                  tty.h
ioconf.h   queue.o                   testio_mod-giftakis.script  tty.o
ioconf.o   README                    testio_mod-orig.script      tty_public.h
io.o       remgdb-testio_mod.script  testio.o
]0;tuser@tutor-vserver: ~/hw1tuser@tutor-vserver:~/hw1$ gdb testio.lnx
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/tuser/hw1/testio.lnx...done.
(gdb) set[K[K[Kde[K[Ktar rem /dev/ttys[KS0
Remote debugging using /dev/ttyS0
0x00100100 in _start ()
(gdb) set $eip=0x100100
(gdb) b main
Breakpoint 1 at 0x100140: file testio.c, line 28.
(gdb) c
Continuing.

Breakpoint 1, main () at testio.c:28
28	{
(gdb) l
23	  output polling to the console device with interrupts (temporarily) off.
24	  We are using it as a debugging tool while working with a development
25	  system, especially one using interrupts.  */
26	
27	int main(void)
28	{
29	  char buf[BUFLEN];
30	  int got, i, lib_console_dev, ldev;
31	
32	  /* Determine the SAPC's "console" device, the serial port for user i/o */
(gdb) l
33	  lib_console_dev = sys_get_console_dev();  /* SAPC support lib fn */
34	  switch(lib_console_dev) {
35	  case COM1: ldev = TTY0;	/* convert to our dev #'s */
36	    break;
37	  case COM2: ldev = TTY1;
38	    break;
39	  default: printf("Unknown console device\n");
40	    return 1;
41	  }
42	  kprintf("Running with device TTY%d\n",ldev);
(gdb) b 45
Breakpoint 2 at 0x1001c2: file testio.c, line 45.
(gdb) c
Continuing.

Breakpoint 2, main () at testio.c:45
45	  ioinit();  /* Initialize devices */
(gdb) n
46	  kprintf("\nTrying simple write(4 chars)...\n");
(gdb) n
47	  got = write(ldev,"hi!\n",4);
(gdb) n
48	  kprintf("write of 4 returned %d\n",got);
(gdb) n
49	  delay();  /* time for output to finish, once write-behind is working */
(gdb) n
51	  kprintf("Trying longer write (9 chars)\n");
(gdb) l
46	  kprintf("\nTrying simple write(4 chars)...\n");
47	  got = write(ldev,"hi!\n",4);
48	  kprintf("write of 4 returned %d\n",got);
49	  delay();  /* time for output to finish, once write-behind is working */
50	
51	  kprintf("Trying longer write (9 chars)\n");
52	  got = write(ldev, "abcdefghi", 9);
53	  kprintf("write of 9 returned %d\n",got);
54	  delay();  /* time for output to finish, once write-behind is working */
55	
(gdb) 
56	  for (i = 0; i < BUFLEN; i++)
57	      buf[i] = 'A'+ i/2;
58	  kprintf("\nTrying write of %d-char string...\n", BUFLEN);
59	  got = write(ldev, buf, BUFLEN);
60	  kprintf("\nwrite returned %d\n", got);
61	  delay();
62	
63	  kprintf("\nType 10 chars input to test typeahead while looping for delay...\n");
64	  delay();
65	  got = read(ldev, buf, 10);	/* should wait for all 10 chars, once fixed */
(gdb) /16bx 0x300000[1@x
0x300000:	0x3c	0x68	0x3c	0x69	0x3c	0x21	0x3c	0x0a
0x300008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) x/16bx 0x300000[K10
0x300010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x300018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) b62[K[K 62
Breakpoint 3 at 0x1002c5: file testio.c, line 62.
(gdb) c
Continuing.
c
Breakpoint 3, main () at testio.c:63
63	  kprintf("\nType 10 chars input to test typeahead while looping for delay...\n");
(gdb) c
Continuing.

Program received signal SIGTRAP, Trace/breakpoint trap.
_startupc () at startup.c:7
7	startup.c: No such file or directory.
	in startup.c
(gdb) ^CQuit
(gdb) quit
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;tuser@tutor-vserver: ~/hw1tuser@tutor-vserver:~/hw1$ q[Kexit
exit

Script done on Thu 23 Sep 2021 11:24:26 AM EDT
